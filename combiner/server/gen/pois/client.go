// Code generated by goa v3.5.2, DO NOT EDIT.
//
// pois client
//
// Command:
// $ goa gen github.com/derbexuk/wurzel/combiner/server/design

package pois

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "pois" service client.
type Client struct {
	PostEndpoint            goa.Endpoint
	ShowEndpoint            goa.Endpoint
	ListByPathEndpoint      goa.Endpoint
	ListByReferenceEndpoint goa.Endpoint
	UpdateEndpoint          goa.Endpoint
	DeactivateEndpoint      goa.Endpoint
	DeleteEndpoint          goa.Endpoint
}

// NewClient initializes a "pois" service client given the endpoints.
func NewClient(post, show, listByPath, listByReference, update, deactivate, delete_ goa.Endpoint) *Client {
	return &Client{
		PostEndpoint:            post,
		ShowEndpoint:            show,
		ListByPathEndpoint:      listByPath,
		ListByReferenceEndpoint: listByReference,
		UpdateEndpoint:          update,
		DeactivateEndpoint:      deactivate,
		DeleteEndpoint:          delete_,
	}
}

// Post calls the "post" endpoint of the "pois" service.
func (c *Client) Post(ctx context.Context, p *PostPayload) (err error) {
	_, err = c.PostEndpoint(ctx, p)
	return
}

// Show calls the "show" endpoint of the "pois" service.
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *CspacePoi, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CspacePoi), nil
}

// ListByPath calls the "ListByPath" endpoint of the "pois" service.
func (c *Client) ListByPath(ctx context.Context, p *ListByPathPayload) (res CspacePoiCollection, err error) {
	var ires interface{}
	ires, err = c.ListByPathEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(CspacePoiCollection), nil
}

// ListByReference calls the "ListByReference" endpoint of the "pois" service.
func (c *Client) ListByReference(ctx context.Context, p *ListByReferencePayload) (res CspacePoiCollection, err error) {
	var ires interface{}
	ires, err = c.ListByReferenceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(CspacePoiCollection), nil
}

// Update calls the "update" endpoint of the "pois" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (err error) {
	_, err = c.UpdateEndpoint(ctx, p)
	return
}

// Deactivate calls the "deactivate" endpoint of the "pois" service.
func (c *Client) Deactivate(ctx context.Context, p *DeactivatePayload) (err error) {
	_, err = c.DeactivateEndpoint(ctx, p)
	return
}

// Delete calls the "delete" endpoint of the "pois" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}
